const CONSTANTS = {
  CLIENT_ID_KEY: '-=clientId=-',
  KEYCHAIN_KEY: '_user_keychain',
  PASSPHRASE_KEY: '_user_passphrase',
  NEVER_UPDATE_PREFIX: '*',
  S3_BUCKET: 'ugimages',
};

const requestPresets = {
  civicBasic: ['contact.personal.email', 'contact.personal.phoneNumber'],
  email: ['verifications.levels.CIVIC:IAL1', 'contact.personal.email'],
  Anonymous_Login: ['verifications.levels.CIVIC:IAL1'],
  Login: ['verifications.levels.CIVIC:IAL1', 'contact.personal.email', 'contact.personal.phoneNumber'],
  Legal: ['contact.personal.email', 'contact.personal.phoneNumber', 'identity.name'],
  NIST_Level_2: ['verifications.levels.NIST:IAL2', 'contact.personal.email', 'contact.personal.phoneNumber', 'identity.identityNumber', 'identity.dateOfBirth', 'contact.personal.address'],
  vote: ['verifications.levels.NIST:IAL2', 'contact.personal.address.city', 'contact.personal.address.state', 'contact.personal.address.country'],
  emailPhoneName: ['verifications.levels.CIVIC:IAL1', 'contact.personal.email', 'contact.personal.phoneNumber', 'identity.name'],
  proofOfAge: ['verifications.levels.CIVIC:IAL1', 'verifications.levels.NIST:IAL2', 'documents.genericId.dateOfBirth'],
  proofOfResidence: [
    'verifications.levels.CIVIC:IAL1',
    'verifications.levels.NIST:IAL2',
    'documents.genericId.type',
    'documents.genericId.number',
    'documents.genericId.name',
    'documents.genericId.given_names',
    'documents.genericId.surname',
    'documents.genericId.sex',
    'documents.genericId.issueLocation',
    'documents.genericId.issueAuthority',
    'documents.genericId.dateOfBirth',
    'documents.genericId.dateOfIssue',
    'documents.genericId.dateOfExpiry',
    'documents.genericId.image',
    'documents.genericId.image_md5',
    'documents.genericId.street',
    'documents.genericId.unit',
    'documents.genericId.city',
    'documents.genericId.state',
    'documents.genericId.zipCode',
    'documents.genericId.country',
    'contact.personal.address.street',
    'contact.personal.address.unit',
    'contact.personal.address.city',
    'contact.personal.address.zipCode',
    'contact.personal.address.county',
    'contact.personal.address.state',
    'contact.personal.address.country',
    'documents.utilityBill.image',
    'documents.utilityBill.image_md5',
    'contact.personal.email',
    'contact.personal.phoneNumber',
  ],
  proofOfIdentity: [
    'verifications.levels.CIVIC:IAL1',
    'verifications.levels.NIST:IAL2',
    'documents.genericId.type',
    'documents.genericId.number',
    'documents.genericId.name',
    'documents.genericId.given_names',
    'documents.genericId.surname',
    'documents.genericId.sex',
    'documents.genericId.issueLocation',
    'documents.genericId.issueAuthority',
    'documents.genericId.dateOfBirth',
    'documents.genericId.dateOfIssue',
    'documents.genericId.dateOfExpiry',
    'documents.genericId.image',
    'documents.genericId.image_md5',
    'documents.genericId.street',
    'documents.genericId.unit',
    'documents.genericId.city',
    'documents.genericId.state',
    'documents.genericId.zipCode',
    'documents.genericId.country',
    'contact.personal.email',
    'contact.personal.phoneNumber',
  ],
  passportIdOnly: [
    'documents.passport.given_names',
    'documents.passport.nationality',
    'documents.passport.dateOfBirth',
    'documents.passport.surname',
    'documents.passport.sex'],
  passportBasic: [
    'documents.passport.given_names',
    'documents.passport.dateOfBirth',
    'documents.passport.surname'],
  passportDocument: [
    'verifications.levels.NIST:IAL2',
    'documents.passport.number',
    'documents.passport.type',
    'documents.passport.issuing_country',
    'documents.passport.name',
    'documents.passport.given_names',
    'documents.passport.surname',
    'documents.passport.nationality',
    'documents.passport.dateOfBirth',
    'documents.passport.sex',
    'documents.passport.placeOfBirth',
    'documents.passport.filiation.mother',
    'documents.passport.filiation.father',
    'documents.passport.dateOfIssue',
    'documents.passport.dateOfExpiry',
    'documents.passport.authority',
    'documents.passport.image',
    'documents.passport.image_md5',
  ],
  passport: [
    'verifications.levels.NIST:IAL2',
    'documents.passport.number',
    'documents.passport.type',
    'documents.passport.issuing_country',
    'documents.passport.name',
    'documents.passport.given_names',
    'documents.passport.surname',
    'documents.passport.nationality',
    'documents.passport.dateOfBirth',
    'documents.passport.sex',
    'documents.passport.placeOfBirth',
    'documents.passport.filiation.mother',
    'documents.passport.filiation.father',
    'documents.passport.dateOfIssue',
    'documents.passport.dateOfExpiry',
    'documents.passport.authority',
  ],
  idCard: [
    'documents.idCard.number',
    'documents.idCard.country',
    'documents.idCard.name',
    'documents.idCard.given_names',
    'documents.idCard.surname',
    'documents.idCard.sex',
    'documents.idCard.issueLocation',
    'documents.idCard.issueAuthority',
    'documents.idCard.dateOfBirth',
    'documents.idCard.dateOfIssue',
    'documents.idCard.dateOfExpiry',
    'documents.idCard.image',
    'documents.idCard.image_md5',
  ],
  driversLicense: [
    'documents.driversLicense.name',
    'documents.driversLicense.given_names',
    'documents.driversLicense.surname',
    'documents.driversLicense.number',
    'documents.driversLicense.country',
    'documents.driversLicense.state',
    'documents.driversLicense.address',
    'documents.driversLicense.issueLocation',
    'documents.driversLicense.issueAuthority',
    'documents.driversLicense.dateOfIssue',
    'documents.driversLicense.dateOfExpiry',
    'documents.driversLicense.comments',
  ],
  driversLicenseDocument: [
    'documents.driversLicense.name',
    'documents.driversLicense.given_names',
    'documents.driversLicense.surname',
    'documents.driversLicense.number',
    'documents.driversLicense.country',
    'documents.driversLicense.state',
    'documents.driversLicense.address',
    'documents.driversLicense.issueLocation',
    'documents.driversLicense.issueAuthority',
    'documents.driversLicense.dateOfIssue',
    'documents.driversLicense.dateOfExpiry',
    'documents.driversLicense.comments',
    'documents.driversLicense.image.front',
    'documents.driversLicense.image.front.md5',
    'documents.driversLicense.image.back',
    'documents.driversLicense.image.back.md5',
  ],
  driversBasic: [
    'documents.driversLicense.address',
    'documents.driversLicense.country',
    'documents.driversLicense.state',
    'documents.driversLicense.name',
    'documents.driversLicense.given_names',
    'documents.driversLicense.surname',
  ],

};

const attestationMap = {
  mapping: [
    {
      name: 'attUtilityBill',
      dataDependencies: [
        'documents.utilityBill.image',
        'documents.utilityBill.image_md5',
      ],
      branches: ['documents.utilityBill.image', 'documents.utilityBill.image_md5'],
      verifications: [],
    },
    {
      name: 'attgenericId',
      dataDependencies: [
        'documents.genericId.type',
        'documents.genericId.number',
        'documents.genericId.name',
        'documents.genericId.given_names',
        'documents.genericId.surname',
        'documents.genericId.sex',
        'documents.genericId.issueLocation',
        'documents.genericId.issueAuthority',
        'documents.genericId.dateOfBirth.d',
        'documents.genericId.dateOfBirth.m',
        'documents.genericId.dateOfBirth.y',
        'documents.genericId.dateOfIssue.m',
        'documents.genericId.dateOfIssue.d',
        'documents.genericId.dateOfIssue.y',
        'documents.genericId.dateOfExpiry.m',
        'documents.genericId.dateOfExpiry.d',
        'documents.genericId.dateOfExpiry.y',
        'documents.genericId.image',
        'documents.genericId.image_md5',
        'documents.genericId.street',
        'documents.genericId.unit',
        'documents.genericId.city',
        'documents.genericId.state',
        'documents.genericId.zipCode',
        'documents.genericId.country',
        'documents.liveImage.image',
        'documents.liveImage.image_md5',
      ],
      branches: [
        'documents.genericId.type',
        'documents.genericId.number',
        'documents.genericId.name',
        'documents.genericId.given_names',
        'documents.genericId.surname',
        'documents.genericId.sex',
        'documents.genericId.issueLocation',
        'documents.genericId.issueAuthority',
        '$(documents.genericId.dateOfBirth, {documents.genericId.dateOfBirth.y}-{documents.genericId.dateOfBirth.m}-{documents.genericId.dateOfBirth.d})',
        '$(documents.genericId.dateOfIssue, {documents.genericId.dateOfIssue.y}-{documents.genericId.dateOfIssue.m}-{documents.genericId.dateOfIssue.d})',
        '$(documents.genericId.dateOfExpiry, {documents.genericId.dateOfExpiry.y}-{documents.genericId.dateOfExpiry.m}-{documents.genericId.dateOfExpiry.d})',
        'documents.genericId.image',
        'documents.genericId.image_md5',
        'documents.genericId.street',
        'documents.genericId.unit',
        'documents.genericId.city',
        'documents.genericId.state',
        'documents.genericId.zipCode',
        'documents.genericId.country',
      ],
      verifications: [],
    },
    {
      name: 'attIdCard',
      dataDependencies: [
        'documents.idCard.number',
        'documents.idCard.country',
        'documents.idCard.state',
        'documents.idCard.name',
        'documents.idCard.given_names',
        'documents.idCard.surname',
        'documents.idCard.sex',
        'documents.idCard.issueLocation',
        'documents.idCard.issueAuthority',
        'documents.idCard.dateOfBirth.d',
        'documents.idCard.dateOfBirth.m',
        'documents.idCard.dateOfBirth.y',
        'documents.idCard.dateOfIssue.d',
        'documents.idCard.dateOfIssue.m',
        'documents.idCard.dateOfIssue.y',
        'documents.idCard.dateOfExpiry.d',
        'documents.idCard.dateOfExpiry.m',
        'documents.idCard.dateOfExpiry.y',
        'documents.idCard.image',
        'documents.idCard.image_md5',
      ],
      branches: [
        'documents.idCard.number',
        'documents.idCard.country',
        'documents.idCard.state',
        'documents.idCard.name',
        'documents.idCard.given_names',
        'documents.idCard.surname',
        'documents.idCard.sex',
        'documents.idCard.issueLocation',
        'documents.idCard.issueAuthority',
        '$(documents.idCard.dateOfBirth, {documents.idCard.dateOfBirth.y}-{documents.idCard.dateOfBirth.m}-{documents.idCard.dateOfBirth.d})',
        '$(documents.idCard.dateOfIssue, {documents.idCard.dateOfIssue.y}-{documents.idCard.dateOfIssue.m}-{documents.idCard.dateOfIssue.d})',
        '$(documents.idCard.dateOfExpiry, {documents.idCard.dateOfExpiry.y}-{documents.idCard.dateOfExpiry.m}-{documents.idCard.dateOfExpiry.d})',
        'documents.idCard.image',
        'documents.idCard.image_md5',
      ],
      verifications: [],
    },
    {
      name: 'attDriveLicense',
      dataDependencies: [
        'documents.driversLicense.number',
        'documents.driversLicense.name',
        'documents.driversLicense.given_names',
        'documents.driversLicense.surname',
        'documents.driversLicense.type',
        'documents.driversLicense.country',
        'documents.driversLicense.state',
        'documents.driversLicense.issueLocation',
        'documents.driversLicense.issueAuthority',
        'documents.driversLicense.dateOfIssue.d',
        'documents.driversLicense.dateOfIssue.m',
        'documents.driversLicense.dateOfIssue.y',
        'documents.driversLicense.dateOfExpiry.d',
        'documents.driversLicense.dateOfExpiry.m',
        'documents.driversLicense.dateOfExpiry.y',
        'documents.driversLicense.dateOfBirth.d',
        'documents.driversLicense.dateOfBirth.m',
        'documents.driversLicense.dateOfBirth.y',
        'documents.driversLicense.comments',
        'documents.driversLicense.address',
        'documents.driversLicense.image.front',
        'documents.driversLicense.image.front_md5',
        'documents.driversLicense.image.back',
        'documents.driversLicense.image.back_md5',
      ],
      branches: [
        'documents.driversLicense.number',
        'documents.driversLicense.name',
        'documents.driversLicense.given_names',
        'documents.driversLicense.surname',
        'documents.driversLicense.type',
        'documents.driversLicense.country',
        'documents.driversLicense.state',
        'documents.driversLicense.issueLocation',
        'documents.driversLicense.issueAuthority',
        '$(documents.driversLicense.dateOfIssue, {documents.driversLicense.dateOfIssue.y}-{documents.driversLicense.dateOfIssue.m}-{documents.driversLicense.dateOfIssue.d})',
        '$(documents.driversLicense.dateOfExpiry, {documents.driversLicense.dateOfExpiry.y}-{documents.driversLicense.dateOfExpiry.m}-{documents.driversLicense.dateOfExpiry.d})',
        '$(documents.driversLicense.dateOfBirth, {documents.driversLicense.dateOfBirth.y}-{documents.driversLicense.dateOfBirth.m}-{documents.driversLicense.dateOfBirth.d})',
        'documents.driversLicense.dateOfIssue.d',
        'documents.driversLicense.dateOfIssue.m',
        'documents.driversLicense.dateOfIssue.y',
        'documents.driversLicense.dateOfExpiry.d',
        'documents.driversLicense.dateOfExpiry.m',
        'documents.driversLicense.dateOfExpiry.y',
        'documents.driversLicense.dateOfBirth.d',
        'documents.driversLicense.dateOfBirth.m',
        'documents.driversLicense.dateOfBirth.y',
        'documents.driversLicense.comments',
        'documents.driversLicense.address',
        'documents.driversLicense.image.front',
        'documents.driversLicense.image.front_md5',
        'documents.driversLicense.image.back',
        'documents.driversLicense.image.back_md5',
      ],
      verifications: [],
    },
    {
      name: 'attPassport',
      dataDependencies: [
        'documents.passport.number',
        'documents.passport.type',
        'documents.passport.issuing_country',
        'documents.passport.surname',
        'documents.passport.given_names',
        'documents.passport.nationality',
        'documents.passport.dateOfBirth.d',
        'documents.passport.dateOfBirth.m',
        'documents.passport.dateOfBirth.y',
        'documents.passport.sex',
        'documents.passport.placeOfBirth',
        'documents.passport.filiation.mother',
        'documents.passport.filiation.father',
        'documents.passport.dateOfIssue.d',
        'documents.passport.dateOfIssue.m',
        'documents.passport.dateOfIssue.y',
        'documents.passport.dateOfExpiry.d',
        'documents.passport.dateOfExpiry.m',
        'documents.passport.dateOfExpiry.y',
        'documents.passport.authority',
        'documents.passport.image',
        'documents.passport.image_md5',
      ],
      branches: [
        'documents.passport.number',
        'documents.passport.type',
        'documents.passport.issuing_country',
        'documents.passport.name',
        'documents.passport.given_names',
        'documents.passport.surname',
        'documents.passport.nationality',
        '$(documents.passport.dateOfBirth, {documents.passport.dateOfBirth.y}-{documents.passport.dateOfBirth.m}-{documents.passport.dateOfBirth.d})',
        'documents.passport.dateOfBirth.d',
        'documents.passport.dateOfBirth.m',
        'documents.passport.dateOfBirth.y',
        'documents.passport.sex',
        'documents.passport.placeOfBirth',
        'documents.passport.filiation.mother',
        'documents.passport.filiation.father',
        '$(documents.passport.dateOfIssue, {documents.passport.dateOfIssue.y}-{documents.passport.dateOfIssue.m}-{documents.passport.dateOfIssue.d})',
        '$(documents.passport.dateOfExpiry, {documents.passport.dateOfExpiry.y}-{documents.passport.dateOfExpiry.m}-{documents.passport.dateOfExpiry.d})',
        'documents.passport.dateOfIssue.d',
        'documents.passport.dateOfIssue.m',
        'documents.passport.dateOfIssue.y',
        'documents.passport.dateOfExpiry.d',
        'documents.passport.dateOfExpiry.m',
        'documents.passport.dateOfExpiry.y',
        'documents.passport.authority',
        'documents.passport.image',
        'documents.passport.image_md5',
      ],
      verifications: [],
    },
    {
      name: 'attDevice',
      dataDependencies: [`${CONSTANTS.NEVER_UPDATE_PREFIX}hardware.uid`],
      branches: [`${CONSTANTS.NEVER_UPDATE_PREFIX}hardware.uid`],
      verifications: [],
    },
    {
      name: 'attVLevel',
      dataDependencies: ['verifications.levels.CIVIC:IAL1',
        'verifications.levels.NIST:IAL2'],
      branches: ['verifications.levels.CIVIC:IAL1',
        'verifications.levels.NIST:IAL2'],
      verifications: [],
    },
    {
      name: 'attCivicBasic',
      dataDependencies: [
        'contact.personal.email.user',
        'contact.personal.email.domain',
        'contact.personal.phoneNumber.countryCode',
        'contact.personal.phoneNumber.number'],
      branches: [
        'contact.personal.email.user',
        'contact.personal.email.domain',
        '$(contact.personal.email, {contact.personal.email.user}@{contact.personal.email.domain})',
        '$(contact.personal.phoneNumber, +{contact.personal.phoneNumber.countryCode} {contact.personal.phoneNumber.number})'],
      verifications: [
        {
          serviceName: 'EmailByCode',
          verificationProvider: ['CIVIC'],
          verificationFlow: 'submit-n-post',
          serviceUrls: {
            CIVIC: {
              submit: '/verify/EmailByCode',
              post: '/verify/EmailByCode/{verificationId}',
            },
          },
          requiredCertificates: [
            {
              identifier: 'contact.personal.email',
              rating: {
                standard: 'NIST',
                strength: 'WEAK',
              },
              service: 'EmailByCode',
            },
          ],
          requiredData: ['contact.personal.email'],
          expectedData: [],
          equivalentAttestations: [],
        },
        {
          serviceName: 'PhoneByCode',
          verificationProvider: ['CIVIC'],
          verificationFlow: 'submit-n-post',
          serviceUrls: {
            CIVIC: {
              submit: '/verify/PhoneByCode',
              post: '/verify/PhoneByCode/{verificationId}',
            },
          },
          requiredCertificates: [
            {
              identifier: 'contact.personal.phoneNumber',
              rating: {
                standard: 'NIST',
                strength: 'WEAK',
              },
              service: 'EmailByCode',
            },
          ],
          requiredData: ['contact.personal.phoneNumber.number', 'contact.personal.phoneNumber.countryCode', 'contact.personal.phoneNumber.type'],
          expectedData: [],
          equivalentAttestations: [],
        },
      ],
    },
    {
      name: 'attBaseIdentity',
      dataDependencies: ['identity.name.firstName',
        'identity.name.middleName',
        'identity.name.lastName',
        'identity.dateOfBirth.d',
        'identity.dateOfBirth.m',
        'identity.dateOfBirth.y'],
      branches: [
        'identity.name.firstName',
        'identity.name.middleName',
        'identity.name.lastName',
        'identity.dateOfBirth.d',
        'identity.dateOfBirth.m',
        'identity.dateOfBirth.y',
        '$(identity.name, {identity.name.lastName}, {identity.name.firstName} {identity.name.middleName})',
        '$(identity.dateOfBirth, {identity.dateOfBirth.m}-{identity.dateOfBirth.d}-{identity.dateOfBirth.y})'],
      verifications: [],
    },
    {
      name: 'attIdentityDocs',
      dataDependencies: ['identity.identityNumber'],
      branches: ['identity.identityNumber'],
      verifications: [],
    },
    {
      name: 'attAddress',
      dataDependencies: [
        'contact.personal.address.street',
        'contact.personal.address.unit',
        'contact.personal.address.city',
        'contact.personal.address.zipCode',
        'contact.personal.address.state',
        'contact.personal.address.county',
        'contact.personal.address.country',
      ],
      branches: [
        'contact.personal.address.street',
        'contact.personal.address.unit',
        'contact.personal.address.city',
        'contact.personal.address.zipCode',
        'contact.personal.address.state',
        'contact.personal.address.county',
        'contact.personal.address.country',
        '$(contact.personal.address, {contact.personal.address.unit}, {contact.personal.address.street} ' +
        '{contact.personal.address.zipCode} ({contact.personal.address.city} / {contact.personal.address.state})'],
      verifications: [],
    },
  ],
};

export default { attestationMap, requestPresets, CONSTANTS };

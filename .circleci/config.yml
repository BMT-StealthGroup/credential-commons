version: 2

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - publish-schemas-to-dev:
          context: Development
          requires:
            - build
          filters:
            branches:
              only:
                - develop
      - check-schemas-on-dev:
          requires:
            - publish-schemas-to-dev
          filters:
            branches:
              only:
                - develop

  # trigger a release on production
  # after the release it will tag on github on the form x.x.x
  release-tag:
    jobs:
      - release:
          filters:
            branches:
              only:
                - master
  # after the tag, it will
  publish-schemas:
    jobs:
      - hold:
          type: approval
          filters:
            # ignore any non-tagged commit on any branch by default
            branches:
              ignore: /.*/
            tags:
              # This Regex says: only run on tags of the type x.x.x
              only: /^\d+\.\d+\.\d+$/
      - publish-schemas-to-prod:
          context: Production
          requires:
            - hold
          filters:
            # ignore any non-tagged commit on any branch by default
            branches:
              ignore: /.*/
            tags:
              # This Regex says: only run on tags of the type x.x.x
              only: /^\d+\.\d+\.\d+$/
      - check-schemas-on-prod:
          requires:
            - publish-schemas-to-prod
          filters:
            # ignore any non-tagged commit on any branch by default
            branches:
              ignore: /.*/
            tags:
              # This Regex says: only run on tags of the type x.x.x
              only: /^\d+\.\d+\.\d+$/

jobs:
  build:
    docker:
      - image: circleci/node:8.11
        environment:
          CIVIC_SEC_URL: https://api.civic.com/sip-sec-dev/DEV
          CIVIC_ATTN_URL: https://dev.api.civic.com/request-attestation-tbch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: sudo npm install -g npm
      - run: npm ci

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run:
          name: run tests incl coverage
          command: npm run test
      - run: npm run lint

  publish-schemas-to-dev:
    docker:
      # image extended from circleci/node:8.9 and includes AWS CLI
      # uncomment and configure aws access key and secret to work with local circleci cli
      - image: civicteam/circle-aws-node
        environment:
          S3_BUCKET_SCHEMA_URL: s3://dev-schemas.civic.com/
          S3_PUBLIC_SCHEMA_URL: http://dev-schemas.civic.com.s3-website-us-east-1.amazonaws.com
          #AWS_ACCESS_KEY_ID: put your token here
          #AWS_SECRET_ACCESS_KEY: put your token here

    # working directory for all tasks is the backend folder
    working_directory: ~/repo

    steps:
      # checkout the repo into the root folder (required because working_directory is ~/repo/backend)
      - checkout:
          path: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: sudo npm install -g npm
      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: npm run generate-schemas
      - run: npm run publish-schemas

  check-schemas-on-dev:
    docker:
      # image extended from circleci/node:8.9 and includes AWS CLI
      - image: civicteam/circle-aws-node
        environment:
          S3_PUBLIC_SCHEMA_URL: http://dev-schemas.civic.com.s3-website-us-east-1.amazonaws.com

    # working directory for all tasks is the backend folder
    working_directory: ~/repo

    steps:
      #uncomment this to run on local circleci
      #- add_ssh_keys
      #- run:
      #    name: Keyscan Github (HACK)
      #    command: mkdir ~/.ssh/ && ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      # checkout the repo into the root folder (required because working_directory is ~/repo/backend)
      - checkout:
          path: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: sudo npm install -g npm
      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: npm run check-schemas

  publish-schemas-to-prod:
    docker:
      # image extended from circleci/node:8.9 and includes AWS CLI
      - image: civicteam/circle-aws-node
        environment:
          S3_BUCKET_SCHEMA_URL: s3://schemas.civic.com/
          S3_PUBLIC_SCHEMA_URL: http://schemas.civic.com.s3-website-us-east-1.amazonaws.com

    # working directory for all tasks is the backend folder
    working_directory: ~/repo

    steps:
      # checkout the repo into the root folder (required because working_directory is ~/repo/backend)
      - checkout:
          path: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: sudo npm install -g npm
      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: npm run generate-schemas
      - run: npm run publish-schemas

  check-schemas-on-prod:
    docker:
      # image extended from circleci/node:8.9 and includes AWS CLI
      - image: civicteam/circle-aws-node
        environment:
          S3_PUBLIC_SCHEMA_URL: http://schemas.civic.com.s3-website-us-east-1.amazonaws.com

    # working directory for all tasks is the backend folder
    working_directory: ~/repo

    steps:
      # checkout the repo into the root folder (required because working_directory is ~/repo/backend)
      - checkout:
          path: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: sudo npm install -g npm
      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: npm run check-schemas

  release:
    docker:
      - image: circleci/node:8.11

    working_directory: ~/repo

    steps:
      - checkout

      # # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: sudo npm install -g npm
      - run: npm ci

      # - save_cache:
      #     paths:
      #       - node_modules
      #     key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run:
          name: git config
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "no-reply@civic.com"
            git config user.name "ci deployer"
            git config --global push.default simple
            git branch --set-upstream-to origin/$CIRCLE_BRANCH

      - run:
          name: version
          command: npm version patch --git-tag-version false

      - run:
          name: tag
          command: npm run tag

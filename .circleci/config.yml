version: 2

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - publish-schemas-to-dev:
          context: Development
          filters:
            branches:
              only:
                - developcir

  # releases trigger a release on prod
  # tags of the form x.x.x trigger contract migration and deployment of the node server to prod
  release-and-publish:
    jobs:
      - hold:
          type: approval
          filters:
            branches:
              only:
                - master
      - publish-schemas-to-prod:
          context: Production
          requires:
            - hold
          filters:
            # ignore any non-tagged commit on any branch by default
            branches:
              only:
                - master
      - release:
          requires:
                - publish-schemas-to-prod
          filters:
            branches:
              only:
                - master

jobs:
  build:
    docker:
      - image: circleci/node:8.11
        environment:
          CIVIC_SEC_URL: https://api.civic.com/sip-sec-dev/DEV
          CIVIC_ATTN_URL: https://dev.api.civic.com/request-attestation-tbch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: sudo npm install -g npm
      - run: npm ci

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run:
          name: run tests incl coverage
          command: npm run test
      - run: npm run lint

  publish-schemas-to-dev:
    docker:
      # image extended from circleci/node:8.9 and includes AWS CLI
      - image: civicteam/circle-aws-node

    # working directory for all tasks is the backend folder
    working_directory: ~/repo

    steps:
      # checkout the repo into the root folder (required because working_directory is ~/repo/backend)
      - checkout:
          path: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: sudo npm install -g npm
      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: npm run generate-schemas
      - run: npm run publish-schemas-test

  publish-schemas-to-prod:
    docker:
      # image extended from circleci/node:8.9 and includes AWS CLI
      - image: civicteam/circle-aws-node

    # working directory for all tasks is the backend folder
    working_directory: ~/repo

    steps:
      # checkout the repo into the root folder (required because working_directory is ~/repo/backend)
      - checkout:
          path: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: sudo npm install -g npm
      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: npm run generate-schemas
      - run: npm run publish-schemas

  release:
    docker:
      - image: circleci/node:8.11

    working_directory: ~/repo

    steps:
      - checkout

      # # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run: sudo npm install -g npm
      - run: npm ci

      # - save_cache:
      #     paths:
      #       - node_modules
      #     key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "package-lock.json"}}

      - run:
          name: git config
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "no-reply@civic.com"
            git config user.name "ci deployer"
            git config --global push.default simple
            git branch --set-upstream-to origin/$CIRCLE_BRANCH

      - run:
          name: version
          command: npm version patch --git-tag-version false

      - run:
          name: tag
          command: npm run tag

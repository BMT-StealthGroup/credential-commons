"use strict";var getAuthHeader=function(){var a=_asyncToGenerator(regeneratorRuntime.mark(function a(b,c,d){var e,f,g,h,i,j,k;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return e="/jwt",f=""+d.sipSecurityService+e,g=d.clientConfig,logger.debug("clientConfig:",JSON.stringify(g,null,2)),h=jwtUtils.createToken(g.id,d.sipSecurityService,g.id,JWT_EXPIRATION,{method:"GET",path:e},g.signingKeys.hexsec),i={url:f,method:"GET",headers:{Authorization:"JWT "+h},qs:{service:"AttesterService",resource:d.attestationService+"/requestAttestation",method:"POST"},json:!0,simple:!0},a.prev=6,a.next=9,b.request(i);case 9:return j=a.sent,k=getAuthHeaderExtension(b,c,d),a.abrupt("return",Promise.resolve("Civic "+j.jwt+"."+k));case 14:return a.prev=14,a.t0=a["catch"](6),logger.error("Falied to get a Civic Authorization Header",a.t0),a.abrupt("return",Promise.reject());case 18:case"end":return a.stop();}},a,this,[[6,14]])}));return function(){return a.apply(this,arguments)}}(),registerClient=function(){var a=_asyncToGenerator(regeneratorRuntime.mark(function a(b,c){var d,e,f,g,h,i,j,k,l;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return d=keyUtils.createKeys(),e=keyUtils.createTempECDHKeys(),f={id:uniqueUtils.createClientID(uuid(),SecureRandom.wordWith(16)),signingKeys:keyUtils.serializeKeys(d),encryptionKeys:keyUtils.serializeKeys(e)},g="/registry",h=""+c.sipSecurityService+g,logger.debug("clientConfig:",JSON.stringify(f,null,2)),i=jwtUtils.createToken(f.id,c.sipSecurityService,f.id,JWT_EXPIRATION,{method:"POST",path:g},f.signingKeys.hexsec),j=requestUtils.createRegistryObject(d.sec,f.id,f.signingKeys.hexpub,f.encryptionKeys.hexpub),k={url:h,method:"POST",headers:{Authorization:"JWT "+i},body:j,json:!0,simple:!0},a.prev=9,logger.debug("Trying to register:",JSON.stringify(k,null,2)),a.next=13,b.request(k);case 13:return l=a.sent,logger.debug("Registration succesful:",JSON.stringify(l,null,2)),_.unset(f,"encryptionKeys"),a.abrupt("return",Promise.resolve(f));case 19:return a.prev=19,a.t0=a["catch"](9),logger.error("Falied to register as a client",a.t0),a.abrupt("return",Promise.reject());case 23:case"end":return a.stop();}},a,this,[[9,19]])}));return function(){return a.apply(this,arguments)}}();function _asyncToGenerator(a){return function(){var b=a.apply(this,arguments);return new Promise(function(a,c){function d(e,f){try{var g=b[e](f),h=g.value}catch(a){return void c(a)}return g.done?void a(h):Promise.resolve(h).then(function(a){d("next",a)},function(a){d("throw",a)})}return d("next")})}}var _=require("lodash"),chainauth=require("chainauth"),_require=require("civic-auth-utils"),keyUtils=_require.keyUtils,jwtUtils=_require.jwtUtils,uniqueUtils=_require.uniqueUtils,requestUtils=_require.requestUtils,SecureRandom=require("../SecureRandom"),uuid=require("uuid/v4"),logger=require("../logger"),JWT_EXPIRATION="3m";function getAuthHeaderExtension(){return logger.warn("Attestation Service is not checking Civic JWT extension"),""}function CurrentCivicAnchor(a,b){var c=this;this.config=a,this.http=b;var d=function(){var a=_asyncToGenerator(regeneratorRuntime.mark(function a(b){var e;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,c.http.request({url:b,method:"GET",simple:!0,json:!0});case 3:if(e=a.sent,e&&e.type){a.next=10;break}return a.next=7,d(b);case 7:return a.abrupt("return",a.sent);case 10:if(!(e&&"permanent"!==e.type)){a.next=13;break}return e.statusUrl=b,a.abrupt("return",e);case 13:return a.abrupt("return",e);case 16:throw a.prev=16,a.t0=a["catch"](0),logger.error("Error polling: "+b,JSON.stringify(a.t0,null,2)),new Error("Error polling: "+b);case 20:case"end":return a.stop();}},a,c,[[0,16]])}));return function(){return a.apply(this,arguments)}}();return this.anchor=function(){var b=_asyncToGenerator(regeneratorRuntime.mark(function b(e,f,g){var h,i,j,k,l,m,n,o,p,q;return regeneratorRuntime.wrap(function(b){for(;;)switch(b.prev=b.next){case 0:if(h=g||{},i=h.keychain||c.config.keychain,j=h.passphrase||c.config.passphrase,k=h.network||c.config.network||"testnet",i){b.next=6;break}throw new Error("Config Error, missing keychain.");case 6:if(j){b.next=8;break}throw new Error("Config Error, missing passphrase.");case 8:return b.prev=8,l=chainauth.attestationRequest({keychain:i,passphrase:j,network:k,label:e,data:f}),m="/requestAttestation",n=""+c.config.attestationService+m,b.next=14,getAuthHeader(c.http,l,c.config);case 14:return o=b.sent,p={url:n,headers:{Authorization:o},body:l,method:"POST",json:!0,simple:!0},b.next=18,c.http.request(p);case 18:if(q=b.sent,q.type){b.next=23;break}return b.next=22,d(""+a.attestationService+q.statusUrl);case 22:q=b.sent;case 23:return b.abrupt("return",q);case 26:throw b.prev=26,b.t0=b["catch"](8),logger.error("Error requesting anchor",JSON.stringify(b.t0,null,2)),new Error("Error requesting anchor");case 30:case"end":return b.stop();}},b,c,[[8,26]])}));return function(){return b.apply(this,arguments)}}(),this.update=function(){var a=_asyncToGenerator(regeneratorRuntime.mark(function a(b){var e;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:if(!("temporary"===b.type&&b.statusUrl)){a.next=5;break}return a.next=3,d(b.statusUrl);case 3:return e=a.sent,a.abrupt("return",e);case 5:throw new Error("Can't update the anchor. type:"+b.type+" statusUrl:"+b.statusUrl);case 6:case"end":return a.stop();}},a,c)}));return function(){return a.apply(this,arguments)}}(),this}module.exports={registerClient:registerClient,CurrentCivicAnchor:CurrentCivicAnchor};